
B7a.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004c  00800100  00000144  000001b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000144  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000204  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000234  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  00000274  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ae6  00000000  00000000  000002cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008f3  00000000  00000000  00000db2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000051d  00000000  00000000  000016a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000094  00000000  00000000  00001bc4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000703b  00000000  00000000  00001c58  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000008b  00000000  00000000  00008c93  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00008d1e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00000228  00000000  00000000  00008d66  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 e4       	ldi	r30, 0x44	; 68
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 34       	cpi	r26, 0x4C	; 76
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	32 d0       	rcall	.+100    	; 0x118 <main>
  b4:	45 c0       	rjmp	.+138    	; 0x140 <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <handleInput>:
}


void wait( int ms )
{
	for (int i=0; i<ms; i++)
  b8:	20 91 4b 01 	lds	r18, 0x014B	; 0x80014b <currentState>
  bc:	30 e0       	ldi	r19, 0x00	; 0
  be:	a9 01       	movw	r20, r18
  c0:	44 0f       	add	r20, r20
  c2:	55 1f       	adc	r21, r21
  c4:	44 0f       	add	r20, r20
  c6:	55 1f       	adc	r21, r21
  c8:	24 0f       	add	r18, r20
  ca:	35 1f       	adc	r19, r21
  cc:	99 e1       	ldi	r25, 0x19	; 25
  ce:	89 9f       	mul	r24, r25
  d0:	20 0d       	add	r18, r0
  d2:	31 1d       	adc	r19, r1
  d4:	11 24       	eor	r1, r1
  d6:	f9 01       	movw	r30, r18
  d8:	e0 50       	subi	r30, 0x00	; 0
  da:	ff 4f       	sbci	r31, 0xFF	; 255
  dc:	84 81       	ldd	r24, Z+4	; 0x04
  de:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <currentState>
  e2:	82 30       	cpi	r24, 0x02	; 2
  e4:	a1 f0       	breq	.+40     	; 0x10e <handleInput+0x56>
  e6:	28 f4       	brcc	.+10     	; 0xf2 <handleInput+0x3a>
  e8:	88 23       	and	r24, r24
  ea:	59 f0       	breq	.+22     	; 0x102 <handleInput+0x4a>
  ec:	81 30       	cpi	r24, 0x01	; 1
  ee:	61 f0       	breq	.+24     	; 0x108 <handleInput+0x50>
  f0:	08 95       	ret
  f2:	83 30       	cpi	r24, 0x03	; 3
  f4:	19 f0       	breq	.+6      	; 0xfc <handleInput+0x44>
  f6:	84 30       	cpi	r24, 0x04	; 4
  f8:	69 f0       	breq	.+26     	; 0x114 <handleInput+0x5c>
  fa:	08 95       	ret
  fc:	81 e0       	ldi	r24, 0x01	; 1
  fe:	82 bb       	out	0x12, r24	; 18
 100:	08 95       	ret
 102:	82 e0       	ldi	r24, 0x02	; 2
 104:	82 bb       	out	0x12, r24	; 18
 106:	08 95       	ret
 108:	84 e0       	ldi	r24, 0x04	; 4
 10a:	82 bb       	out	0x12, r24	; 18
 10c:	08 95       	ret
 10e:	88 e0       	ldi	r24, 0x08	; 8
 110:	82 bb       	out	0x12, r24	; 18
 112:	08 95       	ret
 114:	12 ba       	out	0x12, r1	; 18
 116:	08 95       	ret

00000118 <main>:
	}
}

int main (void)
{
	DDRD = 0x0F; //Eerste vier bits is output en laatste vier is input
 118:	8f e0       	ldi	r24, 0x0F	; 15
 11a:	81 bb       	out	0x11, r24	; 17

	while (1)
	{
		if (PINC ^ 0x20) //PD5
 11c:	83 b3       	in	r24, 0x13	; 19
 11e:	80 32       	cpi	r24, 0x20	; 32
 120:	19 f0       	breq	.+6      	; 0x128 <main+0x10>
		{
			handleInput(P5);
 122:	80 e0       	ldi	r24, 0x00	; 0
 124:	c9 df       	rcall	.-110    	; 0xb8 <handleInput>
 126:	fa cf       	rjmp	.-12     	; 0x11c <main+0x4>
		} 
		else if (PINC ^ 0x40) //PD6
 128:	83 b3       	in	r24, 0x13	; 19
 12a:	80 34       	cpi	r24, 0x40	; 64
 12c:	19 f0       	breq	.+6      	; 0x134 <main+0x1c>
		{
			handleInput(P6);
 12e:	81 e0       	ldi	r24, 0x01	; 1
 130:	c3 df       	rcall	.-122    	; 0xb8 <handleInput>
 132:	f4 cf       	rjmp	.-24     	; 0x11c <main+0x4>
		} 
		else if (PINC ^ 0x80) //PD7
 134:	83 b3       	in	r24, 0x13	; 19
 136:	80 38       	cpi	r24, 0x80	; 128
		{
			handleInput(P7);
 138:	89 f3       	breq	.-30     	; 0x11c <main+0x4>
 13a:	82 e0       	ldi	r24, 0x02	; 2
 13c:	bd df       	rcall	.-134    	; 0xb8 <handleInput>
 13e:	ee cf       	rjmp	.-36     	; 0x11c <main+0x4>

00000140 <_exit>:
 140:	f8 94       	cli

00000142 <__stop_program>:
 142:	ff cf       	rjmp	.-2      	; 0x142 <__stop_program>
